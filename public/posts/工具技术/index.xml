<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术 on 李枫的地</title>
    <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/</link>
    <description>Recent content in 技术 on 李枫的地</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git操作</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/git%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 28 Sep 2023 22:06:37 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/git%E6%93%8D%E4%BD%9C/</guid>
      <description>&#xD;覆盖本地&#xD;git fetch origin git reset --hard origin/&amp;lt;branch_name&amp;gt; </description>
    </item>
    <item>
      <title>Hugo 方法参考</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/hugo-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/</link>
      <pubDate>Mon, 27 Nov 2023 11:04:45 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/hugo-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/</guid>
      <description>String:用于字符串处理&#xD;trim从字符串中删除前导和尾随空格。&#xD;{{ trim &amp;#34; 你好，世界！ &amp;#34; }} upper将字符串转换为小写或大写。&#xD;{{ lower &amp;#34;你好&amp;#34; }} {{ upper &amp;#34;world&amp;#34; }} title将字符串中每个单词的首字母转换为大写。&#xD;{{ title &amp;#34;hello world&amp;#34; }} replace用另一个子字符串替换子字符串的出现。&#xD;{{ replace &amp;#34;你好，世界！&amp;#34; &amp;#34;你好&amp;#34; &amp;#34;嗨&amp;#34; }} substr返回给定字符串的子字符串，从指定位置开始，可选长度。&#xD;{{ substr &amp;#34;你好，世界！&amp;#34; 7 5 }} len返回字符串的长度。&#xD;{{ len &amp;#34;你好，世界！&amp;#34; }} printf使用fmt.Printf语法格式化字符串。&#xD;{{ printf &amp;#34;%s.%sk&amp;#34; (cast.ToString $num ) (cast.ToString $num2 ) }} urlize将字符串转换为适合URL的格式。&#xD;{{ urlize &amp;#34;这是一个示例字符串&amp;#34; }} humanize将字符串转换为人类可读的格式。&#xD;{{ humanize &amp;#34;some_string&amp;#34; }} pluralize基于计数返回词的复数形式。&#xD;{{ with index .Site.Data.translations (printf &amp;#34;%s.</description>
    </item>
    <item>
      <title>markDown 语法</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/markdown-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Wed, 27 Sep 2023 17:58:41 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/markdown-%E8%AF%AD%E6%B3%95/</guid>
      <description>标题：使用&amp;quot;#&amp;ldquo;字符表示标题，数量代表标题级别，最多支持6级标题。例如：&#xA;# 一级标题&#xD;## 二级标题&#xD;### 三级标题&#xD;...&#xD;###### 六级标题 段落：段落之间以空行分隔。&#xA;强调：使用&amp;rdquo;*&amp;ldquo;或&amp;rdquo;_&amp;ldquo;将需要强调的文本包围起来。例如：&#xA;*斜体*&#xD;_斜体_&#xD;**粗体**&#xD;__粗体__&#xD;***粗斜体***&#xD;___粗斜体___ 列表：有序列表以数字和句点开始，无序列表以&amp;rdquo;*&amp;quot;、&amp;quot;+&amp;ldquo;或&amp;rdquo;-&amp;ldquo;开始。例如：&#xA;1. 第一项&#xD;2. 第二项&#xD;3. 第三项&#xD;- 无序列表项1&#xD;- 无序列表项2&#xD;- 嵌套的无序列表项&#xD;- 更深层次的无序列表项&#xD;* 无序列表项A&#xD;* 无序列表项B&#xD;* 嵌套的无序列表项&#xD;* 更深层次的无序列表项&#xD;+ 无序列表项X&#xD;+ 无序列表项Y&#xD;+ 嵌套的无序列表项&#xD;+ 更深层次的无序列表项 链接：使用&amp;rdquo;&#xD;链接文本&amp;ldquo;的格式添加链接。例如：&#xA;[Google](https://www.google.com) 图片：使用&amp;rdquo;&#xD;&amp;ldquo;的格式插入图片。例如：&#xA;![示例图片](https://example.com/image.jpg) 引用：使用&amp;rdquo;&amp;gt;&amp;ldquo;字符表示引用。例如：&#xA;&amp;gt; 这是一段引用的文本。 代码块：使用三个反引号(`)包围代码块，并在开始位置指定代码语言（可选）。例如：&#xA;def hello_world(): print(&amp;#34;Hello, world!&amp;#34;) 表格：使用&amp;rdquo;|&amp;ldquo;和&amp;rdquo;-&amp;ldquo;分隔表头和表格内容，并使用&amp;rdquo;:&amp;ldquo;来对齐表格内容。例如：&#xA;| 列1标题 | 列2标题 |&#xD;|---------|---------|&#xD;| 内容1 | 内容2 |&#xD;| 内容3 | 内容4 |&#xD;左对齐列1标题 | 右对齐列2标题&#xD;:------------|-------------:&#xD;左对齐内容1 | 右对齐内容2&#xD;左对齐内容3 | 右对齐内容4 水平线：使用三个或更多连续的&amp;rdquo;*&amp;quot;、&amp;quot;-&amp;ldquo;或&amp;rdquo;_&amp;ldquo;表示水平线。例如：</description>
    </item>
    <item>
      <title>python 方法参考</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/python-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/</link>
      <pubDate>Mon, 27 Nov 2023 16:45:25 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/python-%E6%96%B9%E6%B3%95%E5%8F%82%E8%80%83/</guid>
      <description>Number(数字)&#xD;ceil(x)： 返回不小于 x 的最小整数&#xD;import math result = math.ceil(4.2) # 返回 5 floor(x)： 返回不大于 x 的最大整数&#xD;import math result = math.floor(4.8) # 返回 4 sqrt(x)： 返回 x 的平方根&#xD;import math result = math.sqrt(25) # 返回 5.0 pow(x, y)： 返回 x 的 y 次方&#xD;import math result = math.pow(2, 3) # 返回 8.0 exp(x)： 返回 e 的 x 次方&#xD;import math result = math.exp(2) # 返回 7.389... log(x)： 返回 x 的自然对数&#xD;import math result = math.</description>
    </item>
    <item>
      <title>技术记录</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 09 Oct 2023 17:30:30 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E6%8A%80%E6%9C%AF%E8%AE%B0%E5%BD%95/</guid>
      <description>进制转换&#xD;hugo 添加mermaid作图&#xD;在 footer.html(页面尾部) 添加以下代码,即可启用mermaid作图&#xA;{{ if (.Params.mermaid) }} &amp;lt;!-- MermaidJS support --&amp;gt; &amp;lt;script async src=&amp;#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; // Replace mermaid pre.code to div Array.from(document.getElementsByClassName(&amp;#34;language-mermaid&amp;#34;)).forEach( (el) =&amp;gt; { el.parentElement.outerHTML = `&amp;lt;div class=&amp;#34;mermaid&amp;#34;&amp;gt;${el.innerText}&amp;lt;/div&amp;gt;`; } ); &amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; /* Set svg to center */ .mermaid svg { display: block; margin: auto; } &amp;lt;/style&amp;gt; {{ end }} 参考&#xA;https://cloud.tencent.com/developer/article/1944123&#xA;https://note.qidong.name/2020/07/mermaid/&#xA;CSS 字体&#xD;在CSS中，font-size属性可以使用多种单位来指定字体大小。以下是一些常见的font-size单位：&#xA;😋&#xA;像素（px）：像素是绝对单位，它会直接指定字体的像素大小。例如，font-size: 16px; 将文本字体设置为16像素高。&#xA;磅（pt）：磅是印刷单位，通常用于打印。1磅等于1/72英寸，因此它也可以用于屏幕上的字体大小。例如，font-size: 12pt; 将字体设置为12磅。&#xA;毫米（mm）：毫米是长度单位，也可以用于字体大小。例如，font-size: 5mm; 将字体大小设置为5毫米。</description>
    </item>
    <item>
      <title>网站收藏</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%AB%99%E6%94%B6%E8%97%8F/</link>
      <pubDate>Tue, 26 Sep 2023 21:56:59 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E7%BD%91%E7%AB%99%E6%94%B6%E8%97%8F/</guid>
      <description>&#xD;学习网站&#xD;全历史 https://www.allhistory.com 今日热榜 https://rebang.today 计网 http://home.ustc.edu.cn/~chaf/course/network.html https://www.runoob.com/w3cnote/summary-of-network.html 网络工具&#xD;科学上网 追云加速 https://www.zhuiyun.shop 白嫖机场 https://yyds.白嫖.net 稳连云 https://wly20.com 机场推荐 http://www.maomeng.cf kaggle https://www.kaggle.com SMS-activate https://sms-activate.org 内网穿透 https://www.natfrp.com/ 软件工具&#xD;画图工具 https://handraw.top Chatgpt https://chat.openai.com 建站参考&#xD;hugo https://hugo.aiaide.com/post&#xA;另一个hugo文档 https://gohugobrasil.netlify.app&#xA;Lyricify https://github.com/WXRIW/Lyricify-App&#xA;颜色墙 http://zhongguose.com/#shangengzi&#xA;博客部署&#xA;nameSilo https://www.namesilo.com 阿里云 https://cn.aliyun.com Vercel https://vercel.com jsDelivr * vercel https://cloud.tencent.com/developer/article/1875306 元素生成&#xA;digraph https://zhuanlan.zhihu.com/p/21993254 fullcalendar https://fullcalendar.io/docs Lunar https://6tail.cn/calendar/api.html graphviz https://graphviz.org plantuml https://plantuml.com/zh/ 参考博客&#xA;干志雄 https://ganzhixiong.com 雷雷屋头 https://ll.sc.cn </description>
    </item>
    <item>
      <title>维基百科</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/</link>
      <pubDate>Tue, 28 Nov 2023 17:55:12 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/</guid>
      <description>维基百科（Wikipedia）提供了一套API，允许开发者通过HTTP请求来获取和检索维基百科的内容。以下是一些关于维基百科API的基本信息：&#xA;维基百科 API 基本信息&#xD;Endpoint（终端点）： https://en.wikipedia.org/w/api.php （英语维基百科的API终端点，你可以替换 en 为其他语言标识符）&#xA;请求方式： 主要使用HTTP GET请求，但也支持POST请求。&#xA;返回格式： 默认返回JSON格式，也可以选择其他格式，如XML。&#xA;常用维基百科 API 请求参数&#xD;action（动作）： 定义API的行为，常见值包括 query（查询）、parse（解析）、opensearch（开放搜索）等。&#xA;format（格式）： 指定返回结果的格式，常见值包括 json 和 xml。&#xA;titles（标题）： 指定要查询的页面标题，可以是单个标题或多个标题。&#xA;pageid（页面ID）： 指定要查询的页面的ID，与标题二选一使用。&#xA;prop（属性）： 查询页面的属性，如 revisions（修订版本）、categories（分类）等。&#xA;rvprop（修订版本属性）： 用于指定 revisions 属性的具体内容，如 content（内容）、timestamp（时间戳）等。&#xA;redirects（重定向）： 控制是否将重定向页面包含在结果中。&#xA;limit（限制）： 用于限制查询结果的数量。&#xA;示例：获取页面内容&#xD;https://en.wikipedia.org/w/api.php?action=query&amp;amp;format=json&amp;amp;titles=Python_(programming_language)&amp;amp;prop=revisions&amp;amp;rvprop=content 这个例子用于获取“Python编程语言”页面的内容。你可以通过修改参数来执行不同的操作和查询其他页面。&#xA;请注意：使用维基百科API时，你可能需要遵循维基百科的使用政策和服务条款。详细的API文档和更多信息可以在&#xD;维基百科开发者页面找到。</description>
    </item>
    <item>
      <title>正则表达式</title>
      <link>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Wed, 27 Sep 2023 18:01:19 +0800</pubDate>
      <guid>http://localhost:80/posts/%E5%B7%A5%E5%85%B7%E6%8A%80%E6%9C%AF/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>正则表达式的所有元字符&#xA;正则表达式的所有元字符包括(markdown表格列出来)：&#xA;元字符 描述 . 匹配任意字符（除了换行符） \d 匹配数字字符 \D 匹配非数字字符 \w 匹配单词字符（字母、数字、下划线） \W 匹配非单词字符 \s 匹配空白字符（空格、制表符、换行符等） \S 匹配非空白字符 ^ 匹配字符串的开头 $ 匹配字符串的结尾 * 匹配前面的元素零次或多次 + 匹配前面的元素一次或多次 ? 表示前面的元素是可选的，匹配零次或一次 {n} 表示前面的元素恰好出现 n 次 {n,} 表示前面的元素至少出现 n 次 {n,m} 表示前面的元素出现 n 到 m 次之间 [] 字符集，匹配括号中任意一个字符 [^] 或 [^&amp;hellip;] 否定字符集，匹配除了括号中指定的任意字符之外的其他字符 </description>
    </item>
  </channel>
</rss>
